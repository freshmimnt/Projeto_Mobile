CREATE DATABASE BDProjeto;

USE BDProjeto;

create table Utilizador(
user_id int not null auto_increment,
user_name VARCHAR(60) not null,
user_email VARCHAR(30),
user_password text(20),
user_tur VARCHAR(20),
user_semestre varchar(30),
primary key (user_id)
);

create table Curso(
cour_id int not null auto_increment,
cour_name VARCHAR(60) not null,
primary key (cour_id)
);

create table UC(
uc_id int not null auto_increment,
uc_name VARCHAR(60) not null,
uc_sala varchar(20),
uc_prof varchar(30),
uc_desc varchar(100),
primary key (UC_id)
);

create table UCC(
ucc_id int not null auto_increment,
ucc_uc_id int,
ucc_cour_id int,
primary key (UCC_id)
);

create table UCCU(
uccu_id int not null auto_increment,
uccu_ucc_id int,
uccu_user_id int,
primary key (UCCU_id)
);

create table Agenda(
agen_id int not null auto_increment,
agen_name varchar(30) not null,
agen_user_id int,
primary key (agen_id)
);

create table Tarefa(
tarefa_id int not null auto_increment,
tarefa_name varchar(30) not null,
tarefa_date datetime not null,
tarefa_nota varchar(20),
tarefa_desc varchar(500),
is_checked BOOLEAN not null,
tarefa_agen_id int,
tarefa_ucc_id int,
primary key (tarefa_id)
);

create table Teste(
test_id int not null auto_increment,
test_name varchar(30) not null,
test_date datetime not null,
test_nota varchar(20),
test_desc varchar(500),
is_checked BOOLEAN not null,
test_agen_id int,
test_ucc_id int,
primary key (test_id)
);

create table Lembrete(
lemb_id int not null auto_increment,
lemb_name varchar(30) not null,
lemb_date datetime not null,
lemb_desc varchar(500),
is_checked BOOLEAN not null,
lemb_agen_id int,
primary key (lemb_id)
);

create table Evento(
even_id int not null auto_increment,
even_name varchar(30) not null,
even_date datetime not null,
even_parti int not null,
even_desc varchar(500),
even_user_id int,
is_finished BOOLEAN not null,
primary key (even_id)
);

create table UE(
ue_id int not null auto_increment,
ue_event_id int,
ue_user_id int,
primary key (UE_id)
);

create table Horario(
    hor_id INT AUTO_INCREMENT,
    hor_data DATE NOT NULL,
    hor_hora_inicio TIME NOT NULL,
    hor_hora_fim TIME NOT NULL,
    hor_descricao VARCHAR(255),
    hor_uc_id int,
    primary key (hor_id)
);

create table Contacto(
cont_id int not null auto_increment,
cont_user_id int,
cont_user2_id int,
primary key (cont_id)
);

create table PAmizade(
pa_id int not null auto_increment,
pa_cont_id int,
pa_stat_id int,
primary key (PA_id)
);

create table Estado(
stat_id int not null auto_increment,
stat_name VARCHAR(50) not null,
primary key (stat_id)
);

-- Foreign Keys
alter table UCC
add constraint UCC_fk_UC
foreign key (UCC_UC_id) references UC(UC_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;
alter table UCC
add constraint UCC_fk_cour
foreign key (UCC_cour_id) references Curso(cour_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table UCCU
add constraint UCCU_fk_UCC
foreign key (UCCU_UCC_id) references UCC(UCC_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;
alter table UCCU
add constraint UCCU_fk_user
foreign key (UCCU_user_id) references Utilizador(user_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table Agenda
add constraint agen_fk_user
foreign key (agen_user_id) references Utilizador(user_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table Tarefa
add constraint tarefa_fk_agen
foreign key (tarefa_agen_id) references Agenda(agen_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;
alter table Tarefa
add constraint tarefa_fk_UCC
foreign key (tarefa_UCC_id) references UCC(UCC_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table Teste
add constraint test_fk_UCC
foreign key (test_UCC_id) references UCC(UCC_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;
alter table Teste
add constraint test_fk_agen
foreign key (test_agen_id) references Agenda(agen_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table Lembrete
add constraint lemb_fk_agen
foreign key (lemb_agen_id) references Agenda(agen_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table Evento
add constraint even_fk_user
foreign key (even_user_id) references Utilizador(user_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table UE
add constraint UE_fk_user
foreign key (UE_user_id) references Utilizador(user_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;
alter table UE
add constraint UE_fk_even
foreign key (UE_even_id) references Evento(even_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table Contacto
add constraint cont_fk_user
foreign key (cont_user_id) references Utilizador(user_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;
alter table Contacto
add constraint cont_fk_user2
foreign key (cont_user2_id) references Utilizador(user_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table PAmizade
add constraint PA_fk_cont
foreign key (PA_cont_id) references Contacto(cont_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;
alter table PAmizade
add constraint PA_fk_stat
foreign key (PA_stat_id) references Estado(stat_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;

alter table Horario
add constraint hor_fk_UC
foreign key (hor_UC_id) references UC(UC_id)
ON DELETE NO ACTION ON UPDATE NO ACTION;
